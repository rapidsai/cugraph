# Dependency list for https://github.com/rapidsai/dependency-file-generator
files:
  all:
    output: [conda]
    matrix:
      cuda: ["11.8"]
      arch: [x86_64]
    includes:
      - checks
      - common_build
      - cpp_build
      - cudatoolkit
      - docs
      - python_build_cythonize
      - python_run_cugraph
      - python_run_pylibcugraph
      - python_run_cugraph_dgl
      - test_notebook
      - test_python_common
      - test_python_cugraph
      - test_python_pylibcugraph
  checks:
    output: none
    includes:
      - checks
      - py_version
  docs:
    output: none
    includes:
      - cudatoolkit
      - docs
      - py_version
  test_cpp:
    output: none
    includes:
      - cudatoolkit
  test_notebooks:
    output: none
    includes:
      - cudatoolkit
      - py_version
      - test_notebook
      - test_python_common
      - test_python_cugraph
  test_python:
    output: none
    includes:
      - cudatoolkit
      - py_version
      - test_python_common
      - test_python_cugraph
      - test_python_pylibcugraph
  py_build_cugraph:
    output: pyproject
    pyproject_dir: python/cugraph
    extras:
      table: build-system
    includes:
      - common_build
      - python_build_wheel
      - python_build_cythonize
      - python_build_cugraph
  py_run_cugraph:
    output: pyproject
    pyproject_dir: python/cugraph
    extras:
      table: project
    includes:
      - python_run_cugraph
  py_test_cugraph:
    output: pyproject
    pyproject_dir: python/cugraph
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      - test_python_common
      - test_python_cugraph
  py_build_pylibcugraph:
    output: pyproject
    pyproject_dir: python/pylibcugraph
    extras:
      table: build-system
    includes:
      - common_build
      - python_build_wheel
      - python_build_cythonize
  py_run_pylibcugraph:
    output: pyproject
    pyproject_dir: python/pylibcugraph
    extras:
      table: project
    includes:
      - python_run_pylibcugraph
  py_test_pylibcugraph:
    output: pyproject
    pyproject_dir: python/pylibcugraph
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      - test_python_common
      - test_python_pylibcugraph
  py_build_cugraph_dgl:
    output: pyproject
    pyproject_dir: python/cugraph-dgl
    extras:
      table: build-system
    includes:
      - python_build_wheel
  py_run_cugraph_dgl:
    output: pyproject
    pyproject_dir: python/cugraph-dgl
    extras:
      table: project
    includes:
      - python_run_cugraph_dgl
  py_build_cugraph_pyg:
    output: pyproject
    pyproject_dir: python/cugraph-pyg
    extras:
      table: build-system
    includes:
      - python_build_wheel
  py_build_cugraph_service_client:
    output: pyproject
    pyproject_dir: python/cugraph-service/client
    extras:
      table: build-system
    includes:
      - python_build_wheel
  py_run_cugraph_service_client:
    output: pyproject
    pyproject_dir: python/cugraph-service/client
    extras:
      table: project
    includes:
      - python_run_cugraph_service_client
  py_build_cugraph_service_server:
    output: pyproject
    pyproject_dir: python/cugraph-service/server
    extras:
      table: build-system
    includes:
      - python_build_wheel
  py_run_cugraph_service_server:
    output: pyproject
    pyproject_dir: python/cugraph-service/server
    extras:
      table: project
    includes:
      - python_run_cugraph_service_server
  py_test_cugraph_service_server:
    output: pyproject
    pyproject_dir: python/cugraph-service/server
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      # TODO: I think that the contents of the server's pyproject.toml
      # dependencies were just copied from cugraph, so I'm not sure if this
      # list is really minimal or if it is a superset.
      - test_python_common
      - test_python_cugraph
channels:
  - rapidsai
  - rapidsai-nightly
  - dask/label/dev
  - conda-forge
  - nvidia
dependencies:
  checks:
    common:
      - output_types: [conda, requirements]
        packages:
          - pre-commit
  cudatoolkit:
    specific:
      - output_types: [conda]
        matrices:
          - matrix:
              cuda: "11.8"
            packages:
              - cudatoolkit=11.8
          - matrix:
              cuda: "11.5"
            packages:
              - cudatoolkit=11.5
          - matrix:
              cuda: "11.4"
            packages:
              - cudatoolkit=11.4
          - matrix:
              cuda: "11.2"
            packages:
              - cudatoolkit=11.2
  common_build:
    common:
      - output_types: [conda, pyproject]
        packages:
          - cmake>=3.23.1,!=3.25.0
          - ninja
  cpp_build:
    common:
      - output_types: [conda]
        packages:
          - c-compiler
          - cxx-compiler
          - gmock=1.10.0
          - gtest=1.10.0
          - libcugraphops=23.04.*
          - libraft-headers=23.04.*
          - libraft=23.04.*
          - librmm=23.04.*
          - openmpi # Required for building cpp-mgtests (multi-GPU tests)
    specific:
      - output_types: [conda]
        matrices:
          - matrix:
              arch: x86_64
            packages:
              - gcc_linux-64=11.*
          - matrix:
              arch: aarch64
            packages:
              - gcc_linux-aarch64=11.*
      - output_types: [conda]
        matrices:
          - matrix:
              arch: x86_64
              cuda: "11.8"
            packages:
              - nvcc_linux-64=11.8
          - matrix:
              arch: aarch64
              cuda: "11.8"
            packages:
              - nvcc_linux-aarch64=11.8
  docs:
    common:
      - output_types: [conda]
        packages:
          - doxygen
          - graphviz
          - ipython
          - nbsphinx
          - numpydoc
          - pydata-sphinx-theme
          - recommonmark
          - sphinx-copybutton
          - sphinx-markdown-tables
          - sphinx<6
          - sphinxcontrib-websupport
  py_version:
    specific:
      - output_types: [conda]
        matrices:
          - matrix:
              py: "3.8"
            packages:
              - python=3.8
          - matrix:
              py: "3.9"
            packages:
              - python=3.9
          - matrix:
              py: "3.10"
            packages:
              - python=3.10
          - matrix:
            packages:
              - python>=3.8,<3.11
  python_build_wheel:
    common:
      - output_types: [conda, pyproject]
        packages:
          - wheel
          - setuptools
  python_build_cythonize:
    common:
      - output_types: [conda, pyproject]
        packages:
          - cython>=0.29,<0.30
          - &pylibraft pylibraft==23.4.*
          - &rmm rmm==23.4.*
          - scikit-build>=0.13.1
  python_build_cugraph:
    common:
      - output_types: [conda, pyproject]
        packages:
          - pylibcugraph==23.4.*
  python_run_cugraph:
    common:
      - output_types: [conda, pyproject]
        packages:
          - cuda-python>=11.7.1,<12.0
          - &cudf cudf==23.4.*
          - &dask dask>=2023.1.1
          - &distributed distributed>=2023.1.1
          - &dask_cuda dask-cuda==23.4.*
          - &dask_cudf dask-cudf==23.4.*
          - &numba numba>=0.56.2
          - raft-dask==23.4.*
          - *rmm
          - &ucx_py ucx-py==0.31.*
      - output_types: conda
        packages:
          - &cupy cupy>=9.5.0,<12.0.0a0
          - libcudf=23.04.*
          - nccl>=2.9.9
          - ucx-proc=*=gpu
      - output_types: pyproject
        packages:
          - &cupy_pip cupy-cuda11x>=9.5.0,<12.0.0a0
          - pylibcugraph==23.4.*
  python_run_pylibcugraph:
    common:
      - output_types: [conda, pyproject]
        packages:
          - *pylibraft
          - *rmm
  python_run_cugraph_dgl:
    common:
      - output_types: [conda, pyproject]
        packages:
          - *numba
          - &numpy numpy>=1.21
      - output_types: [pyproject]
        packages:
          - &cugraph cugraph==23.4.*
  python_run_cugraph_service_client:
    common:
      - output_types: [conda, pyproject]
        packages:
          - &thrift thriftpy2
  python_run_cugraph_service_server:
    common:
      - output_types: [conda, pyproject]
        packages:
          - *cudf
          - *dask
          - *dask_cuda
          - *dask_cudf
          - *distributed
          - *numpy
          - *rmm
          - *thrift
          - *ucx_py
      - output_types: conda
        packages:
          - *cupy
      - output_types: pyproject
        packages:
          - *cupy_pip
          - *cugraph
          - cugraph-service-client==23.4.*
  doc:
    common:
      - output_types: [conda]
        packages:
          - doxygen
          - nbsphinx
          - numpydoc
          - pydata-sphinx-theme
          - recommonmark
          - sphinx
          - sphinxcontrib-websupport
          - sphinx-markdown-tables
          - sphinx-copybutton
  test_notebook:
    common:
      - output_types: [conda, requirements]
        packages:
          - ipython
          - notebook>=0.5.0
  test_python_common:
    common:
      - output_types: [conda, pyproject]
        packages:
          - networkx>=2.5.1
          - *numpy
          - pandas
          - pytest
          - pytest-benchmark
          - pytest-cov
          - pytest-xdist
          - scipy
  test_python_cugraph:
    common:
      - output_types: [conda, pyproject]
        packages:
          - aiohttp
            # cudf will use fsspec but is protocol independent. cugraph tests
            # specifically require http for the test files it asks cudf to read.
          - fsspec[http]>=0.6.0
          - python-louvain
          - requests
          - scikit-learn>=0.23.1
  test_python_pylibcugraph:
    common:
      - output_types: [conda, pyproject]
        packages:
          - *cudf
