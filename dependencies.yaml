# Dependency list for https://github.com/rapidsai/dependency-file-generator
files:
  all:
    output: [conda]
    matrix:
      cuda: ["11.8", "12.0"]
      arch: [x86_64]
    includes:
      - checks
      - common_build
      - cpp_build
      - cuda
      - cuda_version
      - docs
      - python_build_wheel
      - python_build_cythonize
      - depends_on_rmm
      - depends_on_cudf
      - depends_on_dask_cudf
      - depends_on_pylibraft
      - depends_on_raft_dask
      - depends_on_pylibcugraphops
      - depends_on_cupy
      - python_run_cugraph
      - python_run_nx_cugraph
      - python_run_cugraph_dgl
      - python_run_cugraph_pyg
      - test_notebook
      - test_python_common
      - test_python_cugraph
      - test_python_pylibcugraph
      - test_python_nx_cugraph
  checks:
    output: none
    includes:
      - checks
      - py_version
  docs:
    output: none
    includes:
      - cuda_version
      - docs
      - py_version
      - depends_on_pylibcugraphops
  test_cpp:
    output: none
    includes:
      - cuda_version
      - test_cpp
  test_notebooks:
    output: none
    includes:
      - cuda_version
      - py_version
      - test_notebook
      - test_python_common
      - test_python_cugraph
  test_python:
    output: none
    includes:
      - cuda_version
      - depends_on_cudf
      - py_version
      - test_python_common
      - test_python_cugraph
      - test_python_pylibcugraph
  py_build_cugraph:
    output: pyproject
    pyproject_dir: python/cugraph
    extras:
      table: build-system
    includes:
      - common_build
      - python_build_wheel
      - depends_on_rmm
      - depends_on_pylibraft
      - depends_on_pylibcugraph
      - python_build_cythonize
  py_run_cugraph:
    output: pyproject
    pyproject_dir: python/cugraph
    extras:
      table: project
    includes:
      - depends_on_rmm
      - depends_on_cudf
      - depends_on_dask_cudf
      - depends_on_raft_dask
      - depends_on_pylibcugraph
      - depends_on_cupy
      - python_run_cugraph
  py_test_cugraph:
    output: pyproject
    pyproject_dir: python/cugraph
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      - test_python_common
      - test_python_cugraph
  py_build_pylibcugraph:
    output: pyproject
    pyproject_dir: python/pylibcugraph
    extras:
      table: build-system
    includes:
      - common_build
      - python_build_wheel
      - depends_on_rmm
      - depends_on_pylibraft
      - python_build_cythonize
  py_run_pylibcugraph:
    output: pyproject
    pyproject_dir: python/pylibcugraph
    extras:
      table: project
    includes:
      - depends_on_rmm
      - depends_on_pylibraft
  py_test_pylibcugraph:
    output: pyproject
    pyproject_dir: python/pylibcugraph
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      - depends_on_cudf
      - test_python_common
      - test_python_pylibcugraph
  py_build_nx_cugraph:
    output: pyproject
    pyproject_dir: python/nx-cugraph
    extras:
      table: build-system
    includes:
      - python_build_wheel
  py_run_nx_cugraph:
    output: pyproject
    pyproject_dir: python/nx-cugraph
    extras:
      table: project
    includes:
      - depends_on_pylibcugraph
      - depends_on_cupy
      - python_run_nx_cugraph
  py_test_nx_cugraph:
    output: pyproject
    pyproject_dir: python/nx-cugraph
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      - test_python_common
      - test_python_nx_cugraph
  py_build_cugraph_dgl:
    output: pyproject
    pyproject_dir: python/cugraph-dgl
    extras:
      table: build-system
    includes:
      - python_build_wheel
  py_run_cugraph_dgl:
    output: pyproject
    pyproject_dir: python/cugraph-dgl
    extras:
      table: project
    includes:
      - python_run_cugraph_dgl
      - depends_on_pylibcugraphops
  py_test_cugraph_dgl:
    output: pyproject
    pyproject_dir: python/cugraph-dgl
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      - test_python_common
  py_build_cugraph_pyg:
    output: pyproject
    pyproject_dir: python/cugraph-pyg
    extras:
      table: build-system
    includes:
      - python_build_wheel
  py_run_cugraph_pyg:
    output: pyproject
    pyproject_dir: python/cugraph-pyg
    extras:
      table: project
    includes:
      - python_run_cugraph_pyg
      - depends_on_pylibcugraphops
  py_test_cugraph_pyg:
    output: pyproject
    pyproject_dir: python/cugraph-pyg
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      - test_python_common
  py_build_cugraph_service_client:
    output: pyproject
    pyproject_dir: python/cugraph-service/client
    extras:
      table: build-system
    includes:
      - python_build_wheel
  py_run_cugraph_service_client:
    output: pyproject
    pyproject_dir: python/cugraph-service/client
    extras:
      table: project
    includes:
      - python_run_cugraph_service_client
  py_build_cugraph_service_server:
    output: pyproject
    pyproject_dir: python/cugraph-service/server
    extras:
      table: build-system
    includes:
      - python_build_wheel
  py_run_cugraph_service_server:
    output: pyproject
    pyproject_dir: python/cugraph-service/server
    extras:
      table: project
    includes:
      - depends_on_rmm
      - depends_on_cudf
      - depends_on_dask_cudf
      - depends_on_cupy
      - python_run_cugraph_service_server
  py_test_cugraph_service_server:
    output: pyproject
    pyproject_dir: python/cugraph-service/server
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      - test_python_common
      - test_python_cugraph
  cugraph_dgl_dev:
    matrix:
      cuda: ["11.8"]
    output: conda
    conda_dir: python/cugraph-dgl/conda
    includes:
      - checks
      - depends_on_pylibcugraphops
      - cugraph_dgl_dev
      - test_python_common
  cugraph_pyg_dev:
    matrix:
      cuda: ["11.8"]
    output: conda
    conda_dir: python/cugraph-pyg/conda
    includes:
      - checks
      - depends_on_pylibcugraphops
      - cugraph_pyg_dev
      - test_python_common
channels:
  - rapidsai
  - rapidsai-nightly
  - dask/label/dev
  - pytorch
  - pyg
  - dglteam/label/cu118
  - conda-forge
  - nvidia
dependencies:
  checks:
    common:
      - output_types: [conda, requirements]
        packages:
          - pre-commit
  cuda_version:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              cuda: "11.2"
            packages:
              - cuda-version=11.2
          - matrix:
              cuda: "11.4"
            packages:
              - cuda-version=11.4
          - matrix:
              cuda: "11.5"
            packages:
              - cuda-version=11.5
          - matrix:
              cuda: "11.8"
            packages:
              - cuda-version=11.8
          - matrix:
              cuda: "12.0"
            packages:
              - cuda-version=12.0
  cuda:
    specific:
      - output_types: [conda]
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
          - matrix:
              cuda: "11.*"
            packages:
              - cudatoolkit
  common_build:
    common:
      - output_types: [conda, pyproject]
        packages:
          - &cmake_ver cmake>=3.26.4
          - ninja
  cpp_build:
    common:
      - output_types: [conda]
        packages:
          - c-compiler
          - cxx-compiler
          - gmock>=1.13.0
          - gtest>=1.13.0
          - libcugraphops==24.2.*
          - libraft-headers==24.2.*
          - libraft==24.2.*
          - librmm==24.2.*
          - openmpi # Required for building cpp-mgtests (multi-GPU tests)
    specific:
      - output_types: [conda]
        matrices:
          - matrix:
              arch: x86_64
            packages:
              - gcc_linux-64=11.*
          - matrix:
              arch: aarch64
            packages:
              - gcc_linux-aarch64=11.*
      - output_types: [conda]
        matrices:
          - matrix:
              arch: x86_64
              cuda: "11.8"
            packages:
              - nvcc_linux-64=11.8
          - matrix:
              arch: aarch64
              cuda: "11.8"
            packages:
              - nvcc_linux-aarch64=11.8
          - matrix:
              cuda: "12.*"
            packages:
              - cuda-nvcc
  docs:
    common:
      - output_types: [conda]
        packages:
          - breathe
          - doxygen
          - graphviz
          - ipython
          - nbsphinx
          - numpydoc
          - pydata-sphinx-theme
          - recommonmark
          - sphinx-copybutton
          - sphinx-markdown-tables
          - sphinx<6
          - sphinxcontrib-websupport
  py_version:
    specific:
      - output_types: [conda]
        matrices:
          - matrix:
              py: "3.9"
            packages:
              - python=3.9
          - matrix:
              py: "3.10"
            packages:
              - python=3.10
          - matrix:
            packages:
              - python>=3.9,<3.11
  python_build_wheel:
    common:
      - output_types: [conda, pyproject, requirements]
        packages:
          - setuptools>=61.0.0
          - wheel
  python_build_cythonize:
    common:
      - output_types: [conda, pyproject, requirements]
        packages:
          - cython>=3.0.0
      - output_types: conda
        packages:
          - scikit-build-core>=0.7.0
      - output_types: [pyproject, requirements]
        packages:
          - scikit-build-core[pyproject]>=0.7.0
  python_run_cugraph:
    common:
      - output_types: [conda, pyproject]
        packages:
          - &dask rapids-dask-dependency==24.2.*
          - &dask_cuda dask-cuda==24.2.*
          - &numba numba>=0.57
          - &numpy numpy>=1.21
          - &ucx_py ucx-py==0.36.*
      - output_types: conda
        packages:
          - aiohttp
          - fsspec>=0.6.0
          - libcudf==24.2.*
          - requests
          - nccl>=2.9.9
          - ucx-proc=*=gpu
      - output_types: pyproject
        packages:
            # cudf uses fsspec but is protocol independent. cugraph
            # dataset APIs require [http] extras for use with cudf.
          - fsspec[http]>=0.6.0
  python_run_nx_cugraph:
    common:
      - output_types: [conda, pyproject]
        packages:
          - networkx>=3.0
          - *numpy
  python_run_cugraph_dgl:
    common:
      - output_types: [conda, pyproject]
        packages:
          - *numba
          - *numpy
      - output_types: [pyproject]
        packages:
          - &cugraph cugraph==24.2.*
  python_run_cugraph_pyg:
    common:
      - output_types: [conda, pyproject]
        packages:
          - *numba
          - *numpy
      - output_types: [pyproject]
        packages:
          - *cugraph
  python_run_cugraph_service_client:
    common:
      - output_types: [conda, pyproject]
        packages:
          - &thrift thriftpy2
  python_run_cugraph_service_server:
    common:
      - output_types: [conda, pyproject]
        packages:
          - *dask
          - *dask_cuda
          - *numba
          - *numpy
          - *thrift
          - *ucx_py
      - output_types: pyproject
        packages:
          - *cugraph
          - cugraph-service-client==24.2.*
  test_cpp:
    common:
      - output_types: conda
        packages:
          - *cmake_ver
  test_notebook:
    common:
      - output_types: [conda, requirements]
        packages:
          - ipython
          - notebook>=0.5.0
      - output_types: [conda]
        packages:
          - wget
  test_python_common:
    common:
      - output_types: [conda, pyproject]
        packages:
          - pandas
          - pytest
          - pytest-benchmark
          - pytest-cov
          - pytest-xdist
          - scipy
  test_python_cugraph:
    common:
      - output_types: [conda, pyproject]
        packages:
          - networkx>=2.5.1
          - *numpy
          - python-louvain
          - scikit-learn>=0.23.1
      - output_types: [conda]
        packages:
          - pylibwholegraph==24.2.*
  test_python_pylibcugraph:
    common:
      - output_types: [conda, pyproject]
        packages:
          - *numpy
  test_python_nx_cugraph:
    common:
      - output_types: [conda, pyproject]
        packages:
          - packaging>=21
            # not needed by nx-cugraph tests, but is required for running networkx tests
          - pytest-mpl
  cugraph_dgl_dev:
    common:
      - output_types: [conda]
        packages:
          - cugraph==24.2.*
          - pytorch>=2.0
          - pytorch-cuda==11.8
          - dgl>=1.1.0.cu*
  cugraph_pyg_dev:
    common:
      - output_types: [conda]
        packages:
          - cugraph==24.2.*
          - pytorch>=2.0
          - pytorch-cuda==11.8
          - pyg>=2.4.0

  depends_on_rmm:
    common:
      - output_types: conda
        packages:
          - &rmm_conda rmm==24.2.*
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix: {cuda: "12.2"}
            packages: &rmm_packages_pip_cu12
              - rmm-cu12==24.2.*
          - {matrix: {cuda: "12.1"}, packages: *rmm_packages_pip_cu12}
          - {matrix: {cuda: "12.0"}, packages: *rmm_packages_pip_cu12}
          - matrix: {cuda: "11.8"}
            packages: &rmm_packages_pip_cu11
              - rmm-cu11==24.2.*
          - {matrix: {cuda: "11.5"}, packages: *rmm_packages_pip_cu11}
          - {matrix: {cuda: "11.4"}, packages: *rmm_packages_pip_cu11}
          - {matrix: {cuda: "11.2"}, packages: *rmm_packages_pip_cu11}
          - {matrix: null, packages: [*rmm_conda]}

  depends_on_cudf:
    common:
      - output_types: conda
        packages:
          - &cudf_conda cudf==24.2.*
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix: {cuda: "12.2"}
            packages: &cudf_packages_pip_cu12
              - cudf-cu12==24.2.*
          - {matrix: {cuda: "12.1"}, packages: *cudf_packages_pip_cu12}
          - {matrix: {cuda: "12.0"}, packages: *cudf_packages_pip_cu12}
          - matrix: {cuda: "11.8"}
            packages: &cudf_packages_pip_cu11
              - cudf-cu11==24.2.*
          - {matrix: {cuda: "11.5"}, packages: *cudf_packages_pip_cu11}
          - {matrix: {cuda: "11.4"}, packages: *cudf_packages_pip_cu11}
          - {matrix: {cuda: "11.2"}, packages: *cudf_packages_pip_cu11}
          - {matrix: null, packages: [*cudf_conda]}

  depends_on_dask_cudf:
    common:
      - output_types: conda
        packages:
          - &dask_cudf_conda dask-cudf==24.2.*
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix: {cuda: "12.2"}
            packages: &dask_cudf_packages_pip_cu12
              - dask-cudf-cu12==24.2.*
          - {matrix: {cuda: "12.1"}, packages: *dask_cudf_packages_pip_cu12}
          - {matrix: {cuda: "12.0"}, packages: *dask_cudf_packages_pip_cu12}
          - matrix: {cuda: "11.8"}
            packages: &dask_cudf_packages_pip_cu11
              - dask-cudf-cu11==24.2.*
          - {matrix: {cuda: "11.5"}, packages: *dask_cudf_packages_pip_cu11}
          - {matrix: {cuda: "11.4"}, packages: *dask_cudf_packages_pip_cu11}
          - {matrix: {cuda: "11.2"}, packages: *dask_cudf_packages_pip_cu11}
          - {matrix: null, packages: [*dask_cudf_conda]}

  depends_on_pylibraft:
    common:
      - output_types: conda
        packages:
          - &pylibraft_conda pylibraft==24.2.*
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix: {cuda: "12.2"}
            packages: &pylibraft_packages_pip_cu12
              - pylibraft-cu12==24.2.*
          - {matrix: {cuda: "12.1"}, packages: *pylibraft_packages_pip_cu12}
          - {matrix: {cuda: "12.0"}, packages: *pylibraft_packages_pip_cu12}
          - matrix: {cuda: "11.8"}
            packages: &pylibraft_packages_pip_cu11
              - pylibraft-cu11==24.2.*
          - {matrix: {cuda: "11.5"}, packages: *pylibraft_packages_pip_cu11}
          - {matrix: {cuda: "11.4"}, packages: *pylibraft_packages_pip_cu11}
          - {matrix: {cuda: "11.2"}, packages: *pylibraft_packages_pip_cu11}
          - {matrix: null, packages: [*pylibraft_conda]}

  depends_on_raft_dask:
    common:
      - output_types: conda
        packages:
          - &raft_dask_conda raft-dask==24.2.*
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix: {cuda: "12.2"}
            packages: &raft_dask_packages_pip_cu12
              - raft-dask-cu12==24.2.*
          - {matrix: {cuda: "12.1"}, packages: *raft_dask_packages_pip_cu12}
          - {matrix: {cuda: "12.0"}, packages: *raft_dask_packages_pip_cu12}
          - matrix: {cuda: "11.8"}
            packages: &raft_dask_packages_pip_cu11
              - raft-dask-cu11==24.2.*
          - {matrix: {cuda: "11.5"}, packages: *raft_dask_packages_pip_cu11}
          - {matrix: {cuda: "11.4"}, packages: *raft_dask_packages_pip_cu11}
          - {matrix: {cuda: "11.2"}, packages: *raft_dask_packages_pip_cu11}
          - {matrix: null, packages: [*raft_dask_conda]}

  depends_on_pylibcugraph:
    common:
      - output_types: conda
        packages:
          - &pylibcugraph_conda pylibcugraph==24.2.*
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix: {cuda: "12.2"}
            packages: &pylibcugraph_packages_pip_cu12
              - pylibcugraph-cu12==24.2.*
          - {matrix: {cuda: "12.1"}, packages: *pylibcugraph_packages_pip_cu12}
          - {matrix: {cuda: "12.0"}, packages: *pylibcugraph_packages_pip_cu12}
          - matrix: {cuda: "11.8"}
            packages: &pylibcugraph_packages_pip_cu11
              - pylibcugraph-cu11==24.2.*
          - {matrix: {cuda: "11.5"}, packages: *pylibcugraph_packages_pip_cu11}
          - {matrix: {cuda: "11.4"}, packages: *pylibcugraph_packages_pip_cu11}
          - {matrix: {cuda: "11.2"}, packages: *pylibcugraph_packages_pip_cu11}
          - {matrix: null, packages: [*pylibcugraph_conda]}

  depends_on_pylibcugraphops:
    common:
      - output_types: conda
        packages:
          - &pylibcugraphops_conda pylibcugraphops==24.2.*
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix: {cuda: "12.2"}
            packages: &pylibcugraphops_packages_pip_cu12
              - pylibcugraphops-cu12==24.2.*
          - {matrix: {cuda: "12.1"}, packages: *pylibcugraphops_packages_pip_cu12}
          - {matrix: {cuda: "12.0"}, packages: *pylibcugraphops_packages_pip_cu12}
          - matrix: {cuda: "11.8"}
            packages: &pylibcugraphops_packages_pip_cu11
              - pylibcugraphops-cu11==24.2.*
          - {matrix: {cuda: "11.5"}, packages: *pylibcugraphops_packages_pip_cu11}
          - {matrix: {cuda: "11.4"}, packages: *pylibcugraphops_packages_pip_cu11}
          - {matrix: {cuda: "11.2"}, packages: *pylibcugraphops_packages_pip_cu11}
          - {matrix: null, packages: [*pylibcugraphops_conda]}

  depends_on_cupy:
    common:
      - output_types: conda
        packages:
          - cupy>=12.0.0
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          # All CUDA 12 + x86_64 versions
          - matrix: {cuda: "12.2", arch: x86_64}
            packages: &cupy_packages_cu12_x86_64
              - cupy-cuda12x>=12.0.0
          - {matrix: {cuda: "12.1", arch: x86_64}, packages: *cupy_packages_cu12_x86_64}
          - {matrix: {cuda: "12.0", arch: x86_64}, packages: *cupy_packages_cu12_x86_64}

          # All CUDA 12 + aarch64 versions
          - matrix: {cuda: "12.2", arch: aarch64}
            packages: &cupy_packages_cu12_aarch64
              - cupy-cuda12x -f https://pip.cupy.dev/aarch64 # TODO: Verify that this works.
          - {matrix: {cuda: "12.1", arch: aarch64}, packages: *cupy_packages_cu12_aarch64}
          - {matrix: {cuda: "12.0", arch: aarch64}, packages: *cupy_packages_cu12_aarch64}

          # All CUDA 11 + x86_64 versions
          - matrix: {cuda: "11.8", arch: x86_64}
            packages: &cupy_packages_cu11_x86_64
              - cupy-cuda11x>=12.0.0
          - {matrix: {cuda: "11.5", arch: x86_64}, packages: *cupy_packages_cu11_x86_64}
          - {matrix: {cuda: "11.4", arch: x86_64}, packages: *cupy_packages_cu11_x86_64}
          - {matrix: {cuda: "11.2", arch: x86_64}, packages: *cupy_packages_cu11_x86_64}

          # All CUDA 11 + aarch64 versions
          - matrix: {cuda: "11.8", arch: aarch64}
            packages: &cupy_packages_cu11_aarch64
              - cupy-cuda11x -f https://pip.cupy.dev/aarch64 # TODO: Verify that this works.
          - {matrix: {cuda: "11.5", arch: aarch64}, packages: *cupy_packages_cu11_aarch64}
          - {matrix: {cuda: "11.4", arch: aarch64}, packages: *cupy_packages_cu11_aarch64}
          - {matrix: {cuda: "11.2", arch: aarch64}, packages: *cupy_packages_cu11_aarch64}
          - {matrix: null, packages: [cupy-cuda11x>=12.0.0]}
