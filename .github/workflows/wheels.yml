name: cuGraph wheels

on:
  workflow_call:
    inputs:
      versioneer-override:
        type: string
        default: ''
      build-tag:
        type: string
        default: ''
      branch:
        required: true
        type: string
      date:
        required: true
        type: string
      sha:
        required: true
        type: string
      build-type:
        type: string
        default: nightly

concurrency:
  group: "cugraph-${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  pylibcugraph-wheel:
    uses: rapidsai/shared-action-workflows/.github/workflows/wheels-manylinux.yml@main
    with:
      repo: rapidsai/cugraph

      build-type: ${{ inputs.build-type }}
      branch: ${{ inputs.branch }}
      sha: ${{ inputs.sha }}
      date: ${{ inputs.date }}

      package-dir: python/pylibcugraph
      package-name: pylibcugraph

      # Note that this approach to cloning repos obviates any modification to
      # the CMake variables in get_cumlprims_mg.cmake since CMake will just use
      # the clone as is.
      extra-repo: rapidsai/cugraph-ops
      extra-repo-sha: branch-22.12
      extra-repo-deploy-key: CUGRAPH_OPS_SSH_PRIVATE_DEPLOY_KEY

      python-package-versioneer-override: ${{ inputs.versioneer-override }}
      python-package-build-tag: ${{ inputs.build-tag }}

      skbuild-configure-options: "-DDETECT_CONDA_ENV=OFF -DCUGRAPH_BUILD_WHEELS=ON -DCPM_cugraph-ops_SOURCE=/project/cugraph-ops/"

      # On arm also need to install cupy from the specific webpage.
      test-before-arm64: "pip install cupy-cuda11x -f https://pip.cupy.dev/aarch64"
      test-extras: test

      test-unittest: "RAPIDS_DATASET_ROOT_DIR=`pwd`/datasets pytest -v ./python/pylibcugraph/pylibcugraph/tests"
    secrets: inherit

  cugraph-wheel:
    needs: pylibcugraph-wheel
    uses: rapidsai/shared-action-workflows/.github/workflows/wheels-manylinux.yml@main
    with:
      repo: rapidsai/cugraph

      build-type: ${{ inputs.build-type }}
      branch: ${{ inputs.branch }}
      sha: ${{ inputs.sha }}
      date: ${{ inputs.date }}

      package-dir: python/cugraph
      package-name: cugraph

      # Note that this approach to cloning repos obviates any modification to
      # the CMake variables in get_cumlprims_mg.cmake since CMake will just use
      # the clone as is.
      extra-repo: rapidsai/cugraph-ops
      extra-repo-sha: branch-22.12
      extra-repo-deploy-key: CUGRAPH_OPS_SSH_PRIVATE_DEPLOY_KEY

      python-package-versioneer-override: ${{ inputs.versioneer-override }}
      python-package-build-tag: ${{ inputs.build-tag }}

      skbuild-configure-options: "-DDETECT_CONDA_ENV=OFF -DCUGRAPH_BUILD_WHEELS=ON -DCPM_cugraph-ops_SOURCE=/project/cugraph-ops/"

      # Always want to test against latest dask/distributed.
      test-before-amd64: "pip install git+https://github.com/dask/dask.git@main git+https://github.com/dask/distributed.git@main git+https://github.com/rapidsai/dask-cuda.git@branch-23.02"
      # On arm also need to install cupy from the specific webpage.
      test-before-arm64: "pip install cupy-cuda11x -f https://pip.cupy.dev/aarch64 && pip install git+https://github.com/dask/dask.git@main git+https://github.com/dask/distributed.git@main git+https://github.com/rapidsai/dask-cuda.git@branch-23.02"
      test-extras: test
      test-unittest: "RAPIDS_DATASET_ROOT_DIR=`pwd`/datasets pytest -v ./python/cugraph/cugraph/tests"
    secrets: inherit
