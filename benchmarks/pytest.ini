[pytest]
pythonpath =
             shared/python

testpaths =
            cugraph/pytest_based
	    cugraph-service/pytest_based

addopts =
          --benchmark-columns="min, max, mean, stddev, outliers"

markers =
          managedmem_on: RMM managed memory enabled
          managedmem_off: RMM managed memory disabled
          poolallocator_on: RMM pool allocator enabled
          poolallocator_off: RMM pool allocator disabled
          ETL: benchmarks for ETL steps
          small: small datasets
          tiny: tiny datasets
          directed: directed datasets
          undirected: undirected datasets
	  matrix_types: inputs are matrices
	  nx_types: inputs are NetowrkX Graph objects
	  cugraph_types: inputs are cuGraph Graph objects
	  sg: single-GPU
	  mg: multi-GPU
	  snmg: single-node multi-GPU
	  mnmg: multi-node multi-GPU
	  local: local cugraph
	  remote: cugraph-service
	  batch_size_100: batch size of 100 for sampling algos
	  batch_size_500: batch size of 500 for sampling algos
	  batch_size_1000: batch size of 1000 for sampling algos
	  batch_size_2500: batch size of 2500 for sampling algos
	  batch_size_5000: batch size of 5000 for sampling algos
	  batch_size_10000: batch size of 10000 for sampling algos
	  batch_size_20000: batch size of 20000 for sampling algos
	  batch_size_30000: batch size of 30000 for sampling algos
	  batch_size_40000: batch size of 40000 for sampling algos
	  batch_size_50000: batch size of 50000 for sampling algos
	  batch_size_60000: batch size of 60000 for sampling algos
	  batch_size_70000: batch size of 70000 for sampling algos
	  batch_size_80000: batch size of 80000 for sampling algos
	  batch_size_90000: batch size of 90000 for sampling algos
	  batch_size_100000: batch size of 100000 for sampling algos
	  num_clients_2: start 2 cugraph-service clients
	  num_clients_4: start 4 cugraph-service clients
	  num_clients_8: start 8 cugraph-service clients
	  num_clients_16: start 16 cugraph-service clients
	  num_clients_32: start 32 cugraph-service clients
	  fanout_10_25: fanout [10, 25] for sampling algos
	  fanout_5_10_15: fanout [5, 10, 15] for sampling algos

python_classes =
                 Bench*
                 Test*

python_files =
                 bench_*
                 test_*

python_functions =
                   bench_*
                   test_*
